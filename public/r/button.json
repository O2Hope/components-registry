{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:component",
  "title": "Button",
  "description": "A button component",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "registry/new-york/button/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"cursor-pointer inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-xl text-base font-medium transition-colors ring-offset-2 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-600 disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:size-16 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        primary:\n          \"bg-neutrals-900 text-neutrals-00-white  focus-visible:bg-neutrals-700 hover:bg-neutrals-700 active:bg-neutrals-600 disabled:bg-neutrals-500\",\n        \"primary-alt\":\n          \"bg-brand-500 text-primary-alt-button-text  focus-visible:bg-neutrals-700 focus-visible:text-neutrals-00-white hover:bg-neutrals-700 hover:text-neutrals-00-white active:bg-neutrals-600 active:text-neutrals-00-white disabled:bg-neutrals-100 disabled:text-neutrals-500\",\n        secondary:\n          \"border bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        text: \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        \"text-alt\": \"bg-background text-primary shadow-sm hover:bg-primary/90\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        sm: \"py-8 px-16 text-sm\",\n        md: \"h-10 px-8\",\n        lg: \"h-12 px-12 text-lg\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n      size: \"sm\",\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "type": "registry:component"
    }
  ]
}